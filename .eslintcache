<<<<<<< HEAD
[{"/Users/kaybanks/Repository/videoplayer/src/App.js":"1","/Users/kaybanks/Repository/videoplayer/src/components/buttons.js":"2","/Users/kaybanks/Repository/videoplayer/src/components/keyboard.events.js":"3","/Users/kaybanks/Repository/videoplayer/src/components/SortingOption.js":"4","/Users/kaybanks/Repository/videoplayer/src/components/toolbar.js":"5","/Users/kaybanks/Repository/videoplayer/src/components/playlistItem.js":"6","/Users/kaybanks/Repository/videoplayer/src/player/drag.js":"7","/Users/kaybanks/Repository/videoplayer/src/components/stats.service.js":"8","/Users/kaybanks/Repository/videoplayer/src/components/playlist.js":"9","/Users/kaybanks/Repository/videoplayer/src/utility/index.js":"10","/Users/kaybanks/Repository/videoplayer/src/utility/startup.js":"11","/Users/kaybanks/Repository/videoplayer/src/utility/youtube.js":"12","/Users/kaybanks/Repository/videoplayer/src/utility/seedData.js":"13","/Users/kaybanks/Repository/videoplayer/src/utility/playlistCreator.js":"14","/Users/kaybanks/Repository/videoplayer/src/index.js":"15"},{"size":17764,"mtime":1634176208738,"results":"16","hashOfConfig":"17"},{"size":4453,"mtime":1634161812533,"results":"18","hashOfConfig":"17"},{"size":2968,"mtime":1634145727392,"results":"19","hashOfConfig":"17"},{"size":1428,"mtime":1633872127469,"results":"20","hashOfConfig":"17"},{"size":2136,"mtime":1634003830500,"results":"21","hashOfConfig":"17"},{"size":1602,"mtime":1634157118579,"results":"22","hashOfConfig":"17"},{"size":2281,"mtime":1633543023689,"results":"23","hashOfConfig":"17"},{"size":15446,"mtime":1634161803406,"results":"24","hashOfConfig":"17"},{"size":8002,"mtime":1634156616625,"results":"25","hashOfConfig":"17"},{"size":6776,"mtime":1634150919065,"results":"26","hashOfConfig":"17"},{"size":714,"mtime":1633488184587,"results":"27","hashOfConfig":"17"},{"size":1665,"mtime":1633581258720,"results":"28","hashOfConfig":"17"},{"size":18459,"mtime":1633875163723,"results":"29","hashOfConfig":"17"},{"size":1506,"mtime":1633905594354,"results":"30","hashOfConfig":"17"},{"size":667,"mtime":1634147107416,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"149wjm3",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/kaybanks/Repository/videoplayer/src/App.js",["68"],"/Users/kaybanks/Repository/videoplayer/src/components/buttons.js",[],"/Users/kaybanks/Repository/videoplayer/src/components/keyboard.events.js",[],"/Users/kaybanks/Repository/videoplayer/src/components/SortingOption.js",[],["69","70"],"/Users/kaybanks/Repository/videoplayer/src/components/toolbar.js",[],["71","72"],"/Users/kaybanks/Repository/videoplayer/src/components/playlistItem.js",[],["73","74"],"/Users/kaybanks/Repository/videoplayer/src/player/drag.js",["75"],"const drag = {\n  cs: [],\n  onDrag(c) {\n    drag.cs.push(c)\n  }\n}\n\nexport const drop = async (es, loadFiles) => {\n  //   absolutePath: new URL(`file:///${entry.path}`).href;\n  let files = []\n  const entries = es\n    .map(f =>\n      f.webkitGetAsEntry\n        ? f.webkitGetAsEntry()\n        : {\n            isFile: true,\n            file(c) {\n              c(f)\n            }\n          }\n    )\n    .filter(a => a)\n\n  const checkEntry = async entry => {\n    const file = await new Promise(resolve => entry.file(resolve))\n\n    if (file.type) {\n      if (file.type.startsWith('audio/') || file.type.startsWith('video/')) {\n        files.push(file)\n      }\n    } else {\n      if (file.name.startsWith('.') === false) {\n        //   files.push(file);\n      }\n    }\n  }\n\n  const readEntries = entry =>\n    new Promise(resolve => {\n      const directoryReader = entry.createReader()\n\n      directoryReader.readEntries(async entries => {\n        //   console.error('entries: ', entries);\n        for (const entry of entries) {\n          if (entry.isFile) {\n            await checkEntry(entry)\n          } else {\n            await readEntries(entry)\n          }\n        }\n\n        resolve()\n      })\n    })\n\n  for (const entry of entries) {\n    if (entry.isFile) {\n      await checkEntry(entry)\n    } else {\n      await readEntries(entry)\n    }\n  }\n\n  //   files = files.sort((a, b) => parseInt(a.name) - parseInt(b.name));\n\n  //   files = files.sort((a, b) =>\n  //     b.name.localeCompare(a.name)\n  //   );\n  if (files.length) {\n    //  for (const c of drag.cs) {\n    //    c(files)\n    //  }\n\n    loadFiles(files)\n  }\n}\n\nexport default drag\n\nfunction setUpFileUpload() {\n  document.addEventListener('drop', e => {\n    e.preventDefault()\n    drop([...e.dataTransfer.items])\n  })\n\n  document.addEventListener('dragover', e => e.preventDefault())\n\n  const container = document.getElementById('video-container')\n\n  container.addEventListener('dblclick', e => {\n    if (e.target === container) {\n      const input = document.createElement('input')\n\n      input.type = 'file'\n      input.multiple = true\n      input.accept = 'video/*, audio/*'\n\n      input.onchange = () => {\n        if (input.files.length) {\n          drop([...input.files])\n        }\n      }\n\n      input.click()\n    }\n  })\n}\n","/Users/kaybanks/Repository/videoplayer/src/components/stats.service.js",["76"],"import {\n\tconvertToNearest30,\n\tconvertToNearestX,\n\tgetVideoSplitFactor,\n\ttoMinutesSeconds,\n} from \"../utility/index\";\n\n// export const reviewConfig = {\n// \treviewMode: \"inactive\",\n// \treviewStartRange: 0,\n// \treviewEndRange: 0,\n// };\n\n// export const trackingConfig = {\n// \ttrackingMode: \"inactive\",\n// \tstartPosition: 0,\n// \tendPosition: 120,\n// \tunsubscribe: null,\n// \tdefaultStartOffset: 30,\n// \tdefaultEndOffset: 120,\n// \tstartOffset: 30,\n// \tinterval: 120,\n// \tcachedPlaybackRate: 2.0,\n// };\nexport const alertConfig = {\n\talertConfigMidwayTime: null,\n\talertConfigOneThirdTime: null,\n\talertConfigTwoThirdTime: null,\n\tspeedMode: 0, //1\n\tlastKeypressTime: null,\n\tdelta: 500,\n};\n\nexport function studyStatisticsTracker(increment = 1) {\n\tconst { trackingConfig } = this.state;\n\tconst currentSplit = parseInt(trackingConfig.endPosition / trackingConfig.interval);\n\tlet reviews = JSON.parse(localStorage.getItem(\"reviews\"));\n\tconst reviewExists = !!reviews;\n\tlet updatedReview = reviewExists ? reviews : {};\n\tlet review = updatedReview[this.state.url];\n\n\tif (!review) {\n\t\treview = {\n\t\t\tname: this.state.title,\n\t\t\tpath: this.state.url,\n\t\t\ttype: this.state.videoFormat,\n\t\t\treplayHistory: {\n\t\t\t\t[`split-${currentSplit}`]: {\n\t\t\t\t\tcount: increment,\n\t\t\t\t\tstartTime: trackingConfig.startPosition,\n\t\t\t\t\tendTime: trackingConfig.endPosition,\n\t\t\t\t},\n\t\t\t},\n\t\t\tlastReviewDate: Date.now(),\n\t\t};\n\t} else {\n\t\tif (!review.replayHistory[`split-${currentSplit}`]) {\n\t\t\treview.replayHistory[`split-${currentSplit}`] = {\n\t\t\t\tcount: increment,\n\t\t\t\tstartTime: trackingConfig.startPosition,\n\t\t\t\tendTime: trackingConfig.endPosition,\n\t\t\t};\n\t\t} else {\n\t\t\treview.replayHistory[`split-${currentSplit}`].count =\n\t\t\t\treview.replayHistory[`split-${currentSplit}`].count + increment;\n\t\t}\n\n\t\treview.lastReviewDate = Date.now();\n\t}\n\n\tupdatedReview[this.state.url] = { ...review };\n\tlocalStorage.setItem(\"reviews\", JSON.stringify({ ...updatedReview }));\n\t// this.notifyReplayStatus();\n}\n\n// =============================================================================\n// =============================================================================\n\nexport function setupTrackingMode() {\n\tconst { reviewConfig, trackingConfig, duration } = this.state;\n\n\tif (reviewConfig.reviewMode !== \"inactive\") {\n\t\tthis.setState({ reviewConfig: { ...reviewConfig, reviewMode: \"inactive\" } });\n\t\tthis.setSortType(\"playlist\");\n\t\tthis.setupReviewMode({ activate: false });\n\t}\n\t//====================\n\n\tlet videoSplit = getVideoSplitFactor(duration);\n\tconst interval = parseInt(duration / videoSplit);\n\n\tconst startOffset = convertToNearestX(\n\t\tthis.player?.getCurrentTime(),\n\t\ttrackingConfig.interval\n\t);\n\n\tthis.setState({ trackingConfig: { ...trackingConfig, interval, startOffset } });\n\t//====================\n\tthis.watcherForTrackingMode(null, false);\n}\n\nlet speedTracker = 2;\nlet unsubscribeToTracking = null;\n\nexport function watcherForTrackingMode(offSet, reNormalize = true) {\n\tconst { trackingConfig, duration } = this.state;\n\tclearInterval(alertConfig.alertConfigMidwayTime);\n\tclearInterval(alertConfig.alertConfigTwoThirdTime);\n\tclearInterval(alertConfig.alertConfigOneThirdTime);\n\t//   ========================\n\n\tif (trackingConfig.trackingMode === \"active\") {\n\t\tclearInterval(unsubscribeToTracking);\n\t\tthis.setState({\n\t\t\ttrackingConfig: { ...trackingConfig, trackingMode: \"inactive\" },\n\t\t});\n\n\t\t// this.notify({\n\t\t// \ttitle: \"Tracking mode:\",\n\t\t// \tmessage: \"Tracking: Stopped!\",\n\t\t// });\n\t} else {\n\t\tlet startPosition;\n\t\tlet endPosition;\n\n\t\tif (reNormalize) {\n\t\t\tstartPosition = Math.max(\n\t\t\t\tconvertToNearest30(this.player?.getCurrentTime()) - offSet,\n\t\t\t\t0\n\t\t\t);\n\t\t\tendPosition = Math.min(startPosition + offSet, duration);\n\t\t\tthis.setState({\n\t\t\t\ttrackingConfig: { ...trackingConfig, startPosition, endPosition },\n\t\t\t});\n\t\t} else {\n\t\t\tstartPosition = Math.max(trackingConfig.startOffset, 0);\n\t\t\tendPosition = Math.min(startPosition + trackingConfig.interval, duration);\n\t\t\tthis.setState({\n\t\t\t\ttrackingConfig: { ...trackingConfig, startPosition, endPosition },\n\t\t\t});\n\t\t}\n\n\t\tthis.setSpeed(2);\n\n\t\tconst minDurationForVideoSplitFactor = 5 * 60;\n\t\tduration < minDurationForVideoSplitFactor\n\t\t\t? this.setVideoPosition(0)\n\t\t\t: this.setVideoPosition(parseInt(startPosition));\n\n\t\tunsubscribeToTracking = setInterval(() => {\n\t\t\tconst {\n\t\t\t\ttrackingConfig: { startPosition, endPosition },\n\t\t\t} = this.state;\n\n\t\t\tif (\n\t\t\t\tthis.player?.getCurrentTime() >= endPosition - 5 ||\n\t\t\t\tthis.player?.getCurrentTime() < startPosition\n\t\t\t) {\n\t\t\t\tthis.setVideoPosition(startPosition);\n\n\t\t\t\tconst speedOptions = [2, 3, 10];\n\t\t\t\tspeedTracker = (speedTracker + 1) % speedOptions.length;\n\t\t\t\tthis.setSpeed(speedOptions[speedTracker]);\n\t\t\t\tthis.studyStatisticsTracker();\n\t\t\t}\n\t\t}, 1000);\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttrackingConfig: { ...trackingConfig, trackingMode: \"active\" },\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.notifyTrackingStatus();\n\t\t\t\tconsole.log(\"🚀 ==> watcherForTrackingMode ==> this.state\", this.state);\n\t\t\t}\n\t\t);\n\t}\n}\n\n// =============================================================================\n// =============================================================================\n\nexport function moveToNextPlaybackRange() {\n\tconst { trackingConfig, duration } = this.state;\n\n\tconst startPosition = Math.min(\n\t\ttrackingConfig.startPosition + trackingConfig.interval,\n\t\tduration - trackingConfig.interval\n\t);\n\n\tconst endPosition = Math.min(startPosition + trackingConfig.interval, duration);\n\tthis.setState({\n\t\ttrackingConfig: { ...trackingConfig, startPosition, endPosition },\n\t});\n\t// this.setVideoPosition(trackingConfig.startPosition);\n\tthis.setVideoPosition(startPosition);\n\tthis.notifyTrackingStatus();\n}\n\nexport function moveToPreviousPlaybackRange() {\n\tconst { trackingConfig, duration } = this.state;\n\tconst startPosition = Math.max(trackingConfig.startPosition - trackingConfig.interval, 0);\n\n\tconst endPosition = Math.min(\n\t\ttrackingConfig.startPosition + trackingConfig.interval,\n\t\tduration\n\t);\n\n\tthis.setState({\n\t\ttrackingConfig: { ...trackingConfig, startPosition, endPosition },\n\t});\n\t// this.setVideoPosition(trackingConfig.startPosition);\n\tthis.setVideoPosition(startPosition);\n\tthis.notifyTrackingStatus();\n}\n// =============================================================================\n// =============================================================================\n\nlet unsubscribeToReview = null;\n\nexport function setupReviewMode({ activate = true, loopCurrentSplit = false }) {\n\tconst { reviewConfig, trackingConfig } = this.state;\n\n\tif (!activate) {\n\t\tclearInterval(unsubscribeToReview);\n\t\tunsubscribeToReview = null;\n\t\tthis.setState({\n\t\t\treviewConfig: { ...reviewConfig, reviewMode: \"inactive\" },\n\t\t});\n\t\treturn;\n\t}\n\n\tif (trackingConfig.trackingMode === \"active\") {\n\t\tclearInterval(unsubscribeToReview);\n\t\tthis.setState({\n\t\t\ttrackingConfig: { ...trackingConfig, trackingMode: \"inactive\" },\n\t\t});\n\t\tthis.setSortType(\"time-descending\");\n\t\tthis.watcherForTrackingMode(null, false);\n\t}\n\t// =====================================\n\n\tif (loopCurrentSplit) {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\treviewConfig: { ...reviewConfig, reviewMode: \"loop\" },\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.notify({\n\t\t\t\t\ttitle: \"Review:\",\n\t\t\t\t\tmessage: \" Review Mode: Loop\",\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t} else {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\treviewConfig: { ...reviewConfig, reviewMode: \"active\" },\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.notify({\n\t\t\t\t\ttitle: \"Review:\",\n\t\t\t\t\tmessage: \" Review Mode: Active\",\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\tif (reviewConfig.reviewStartRange) this.setVideoPosition(reviewConfig.reviewStartRange);\n\n\tclearInterval(unsubscribeToReview);\n\tunsubscribeToReview = null;\n\tthis.watcherForReviewMode(loopCurrentSplit);\n}\n\nexport function watcherForReviewMode(loopCurrentSplit = false) {\n\tclearInterval(alertConfig.alertConfigMidwayTime);\n\tclearInterval(alertConfig.alertConfigTwoThirdTime);\n\tclearInterval(alertConfig.alertConfigOneThirdTime);\n\t//   ========================\n\tunsubscribeToReview = setInterval(() => {\n\t\tconst { reviewConfig } = this.state;\n\n\t\tif (this.player?.getCurrentTime() < reviewConfig.reviewStartRange) {\n\t\t\tthis.setVideoPosition(reviewConfig.reviewStartRange);\n\t\t}\n\n\t\tif (loopCurrentSplit) {\n\t\t\tif (this.player?.getCurrentTime() < reviewConfig.reviewEndRange - 5) return;\n\t\t\tthis.setVideoPosition(reviewConfig.reviewStartRange);\n\t\t\tthis.studyStatisticsTracker(0.5);\n\t\t} else {\n\t\t\tif (this.player?.getCurrentTime() < reviewConfig.reviewEndRange - 5) return;\n\t\t\tthis.studyStatisticsTracker(0.25);\n\t\t\t// Todo ========\n\t\t\tthis.handleNext();\n\t\t\tthis.setVideoPosition(reviewConfig.reviewStartRange);\n\t\t\t//  ========\n\t\t\tclearInterval(unsubscribeToReview);\n\t\t\tthis.watcherForReviewMode();\n\t\t\tthis.notifyReplayStatus();\n\t\t}\n\t}, 1000);\n}\n// =============================================================================\n// =============================================================================\n\nexport function alertAtKeyMoments() {\n\tconst { duration } = this.state;\n\tclearInterval(alertConfig.alertConfigMidwayTime);\n\tclearInterval(alertConfig.alertConfigTwoThirdTime);\n\tclearInterval(alertConfig.alertConfigOneThirdTime);\n\talertConfig.speedMode === 1 && this.setSpeed(2.5);\n\talertConfig.speedMode === 2 && this.setSpeed(2.5);\n\t//   =================\n\t//   const standardLength = 10 * 60; //10mins\n\t//   const minimumLength = 6 * 60; //6mins\n\t//   if (duration< minimumLength) return;\n\t//   =================>\n\talertConfig.alertConfigOneThirdTime = setInterval(() => {\n\t\tconst _25PercentTime = duration * 0.25; //80%\n\n\t\tif (\n\t\t\t// duration> standardLength &&\n\t\t\tthis.player?.getCurrentTime() > _25PercentTime &&\n\t\t\tthis.player?.getCurrentTime() < _25PercentTime * 2\n\t\t) {\n\t\t\talertConfig.speedMode === 1 && this.setSpeed(3);\n\t\t\talertConfig.speedMode === 2 && this.setSpeed(3.5);\n\n\t\t\tconst remainTime = duration - _25PercentTime; //25%\n\t\t\tthis.notify({\n\t\t\t\ttitle: `Alert: Just Past 25%`,\n\t\t\t\tmessage: `[${toMinutesSeconds(remainTime, false)}]`,\n\t\t\t});\n\t\t\tclearInterval(alertConfig.alertConfigOneThirdTime);\n\t\t}\n\t}, 2000);\n\n\t//   =================>\n\talertConfig.alertConfigMidwayTime = setInterval(() => {\n\t\tconst midwayTime = duration * 0.5; //60%\n\n\t\tif (this.player?.getCurrentTime() > midwayTime) {\n\t\t\talertConfig.speedMode === 1 && this.setSpeed(3);\n\t\t\talertConfig.speedMode === 2 && this.setSpeed(4);\n\n\t\t\tconst remainTime = duration - midwayTime; //40%\n\t\t\tthis.notify({\n\t\t\t\ttitle: `Alert:Just Past 50%`,\n\t\t\t\tmessage: `[${toMinutesSeconds(remainTime, false)}]`,\n\t\t\t});\n\t\t\tclearInterval(alertConfig.alertConfigMidwayTime);\n\t\t}\n\t}, 2000);\n\n\t//   =====================>\n\talertConfig.alertConfigTwoThirdTime = setInterval(() => {\n\t\tconst _75PercentTime = duration * 0.75; //80%\n\n\t\tif (\n\t\t\t// duration> standardLength &&\n\t\t\tthis.player?.getCurrentTime() > _75PercentTime\n\t\t) {\n\t\t\talertConfig.speedMode === 1 && this.setSpeed(3.5);\n\t\t\talertConfig.speedMode === 2 && this.setSpeed(4.5);\n\n\t\t\tconst remainTime = duration - _75PercentTime; //25%\n\t\t\tthis.notify({\n\t\t\t\ttitle: `Alert:Just Past 75%`,\n\t\t\t\tmessage: `[${toMinutesSeconds(remainTime, false)}]`,\n\t\t\t});\n\t\t\tclearInterval(alertConfig.alertConfigTwoThirdTime);\n\t\t}\n\t}, 2000);\n}\n\nexport function notifyReplayStatus() {\n\tconst { duration } = this.state;\n\tconst { reviewConfig, trackingConfig } = this.state;\n\tconst currentSplit = parseInt(trackingConfig.endPosition / trackingConfig.interval);\n\tconst totalSplit = parseInt(duration / trackingConfig.interval);\n\tlet reviews = JSON.parse(localStorage.getItem(\"reviews\"));\n\n\tlet videoStat =\n\t\treviews && reviews[this.state.url]?.replayHistory[`split-${currentSplit}`]?.count;\n\n\tthis.notify({\n\t\ttitle: `Video Stats:\n        \\r\\nSplit watch count:: ${videoStat ?? 0} times!\n        \\r\\nReview: is ${\n\t\t\treviewConfig.reviewMode === \"active\" ? \"ON!:\" : \"OFF!:\"\n\t\t}\\r\\nStart Time: ${toMinutesSeconds(\n\t\t\ttrackingConfig.startPosition\n\t\t)}\\r\\nEnd Time:  ${toMinutesSeconds(trackingConfig.endPosition)}`,\n\t\tmessage: `Position:   [${currentSplit}] of [${totalSplit}]`,\n\t\tdelay: 20000,\n\t});\n}\nexport function notifyTrackingStatus() {\n\tconst { trackingConfig, duration } = this.state;\n\tconst currentSplit = parseInt(trackingConfig.endPosition / trackingConfig.interval);\n\tconst totalSplit = parseInt(duration / trackingConfig.interval);\n\tlet reviews = JSON.parse(localStorage.getItem(\"reviews\"));\n\n\tlet videoStat =\n\t\treviews && reviews[this.state.url]?.replayHistory[`split-${currentSplit}`]?.count;\n\n\tthis.notify({\n\t\ttitle: \"Tracking:\",\n\t\tmessage: `Split watch count:: ${videoStat ?? 0} times!\n        \\r\\nTracking: is ${trackingConfig.trackingMode === \"active\" ? \"ON!:\" : \"OFF!:\"}`,\n\t\tdelay: 20000,\n\t});\n}\n//=================================================================\n//=================================================================\n\n// video.addEventListener('seeked', this.alertAtKeyMoments);\nexport function videoOnLoadeddata() {\n\tconst { reviewConfig, trackingConfig } = this.state;\n\n\tlet isReviewMode_TrackingMode_Active =\n\t\ttrackingConfig.trackingMode !== \"inactive\" || reviewConfig.reviewMode !== \"inactive\";\n\n\tif (!isReviewMode_TrackingMode_Active) {\n\t\tthis.alertAtKeyMoments();\n\t}\n\t//   clearInterval( unsubscribeToTracking);\n\t//\n\n\t//   setupTrackingMode();\n\t//   this.watcherForTrackingMode(null, false);\n\t//   setTimeout(this.notifyReplayStatus, 5000);\n\n\tif (trackingConfig.trackingConfig === \"active\") {\n\t\tthis.setupTrackingMode();\n\t\tthis.setupTrackingMode();\n\t\t// this.watcherForTrackingMode(null, false);\n\t\t// return setTimeout(this.notifyTrackingStatus.bind(this), 5000);\n\t}\n\n\t// this.notify({\n\t// \ttitle: `Title: ${this.state.title}`,\n\t// \tmessage: `[${toMinutesSeconds(duration)}]`,\n\t// });\n}\n\n// video.addEventListener('timeupdate', detectBackwardSkipSeek);\n\nexport function videoOnPause() {\n\t//    this.state.trackingMode==='active' && studyStatisticsTracker(0.5);\n\tthis.studyStatisticsTracker(0.5);\n}\nexport function videoOnended() {\n\tconst { trackingConfig } = this.state;\n\n\tif (trackingConfig.trackingConfig === \"active\") {\n\t\tthis.setVideoPosition(trackingConfig.startPosition);\n\t\t// this.notifyTrackingStatus();\n\t}\n\n\t//   this.setSpeed( trackingConfig.cachedPlaybackRate || 3);\n\n\t//   clearInterval( unsubscribeToTracking);\n\t//    trackingConfig = {};\n\n\t// this.notify({\n\t// \ttitle: `Toggle Speed Stopped:`,\n\t// \tmessage: \"\",\n\t// });\n}\n\nexport function seekToTime(value) {\n\tconst { duration } = this.state;\n\tlet seekToTime = this.player?.getCurrentTime() + value;\n\n\tif (seekToTime < 0) {\n\t\tthis.setVideoPosition(0);\n\t} else if (seekToTime > duration) this.setVideoPosition(duration);\n\n\tthis.setVideoPosition(seekToTime);\n\t// this.notify({\n\t//     title: 'Sample Title: ',\n\t//     message: `Current Position: <${toMinutesSeconds(\n\t//         this.player?.getCurrentTime()\n\t//     )}> of <${toMinutesSeconds(duration)}>`\n\t// })\n}\n\nexport function reduceSpeed(value = 0.25) {\n\tconst MIN_SPEED = 0.5;\n\tlet newSpeed = this.state.playbackRate - value;\n\tnewSpeed = newSpeed < MIN_SPEED ? MIN_SPEED : newSpeed;\n\tthis.setSpeed(newSpeed);\n}\n\nexport function increaseSpeed(value = 0.25) {\n\tconst MAX_SPEED = 15;\n\tlet newSpeed = this.state.playbackRate + value;\n\tnewSpeed = newSpeed > MAX_SPEED ? MAX_SPEED : newSpeed;\n\tthis.setSpeed(newSpeed);\n}\n\nexport function changeReviewMode() {\n\tconst { reviewConfig } = this.state;\n\n\tif (reviewConfig.reviewMode === \"active\") {\n\t\tthis.setupReviewMode({ loopCurrentSplit: true });\n\t} else if (reviewConfig.reviewMode === \"loop\") {\n\t\tthis.setupReviewMode({ activate: false });\n\t} else if (reviewConfig.reviewMode === \"inactive\") {\n\t\tthis.setupReviewMode({ activate: true });\n\t}\n}\n","/Users/kaybanks/Repository/videoplayer/src/components/playlist.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/index.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/startup.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/youtube.js",["77"],"import { Observable, firstValueFrom } from 'rxjs'\n\nexport default async function getVideoDataFromUrl(url) {\n  const videoId = parseYoutubeUrl(url)\n\n  if (!videoId) return false\n\n  let videoData = await firstValueFrom(getVideoData$(videoId)) // await video data\n\n  console.log(\n    '🚀 ~ file: youtube.js ~ line 12 ~ getVideoDataFromUrl ~ videoData',\n    videoData\n  )\n\n  return videoData\n}\n\nfunction getVideoData$(ytId) {\n  return new Observable(observer => {\n    let embed = document.createElement('iframe')\n\n    embed.setAttribute(\n      'src',\n      `https://www.youtube.com/embed/${ytId}?enablejsapi=1&widgetid=99`\n    )\n    embed.cssText = 'position: absolute; display: none'\n\n    embed.onload = function () {\n      var message = JSON.stringify({\n        event: 'listening',\n        id: 99,\n        channel: 'widget'\n      })\n\n      embed.contentWindow.postMessage(message, 'https://www.youtube.com')\n    }\n\n    function parseData(e) {\n      const { event, id, info } = JSON.parse(e.data)\n\n      // console.log(JSON.parse(e.data))\n      if (event === 'initialDelivery' && id == 99) observer.next(info.videoData)\n    }\n\n    document.body.appendChild(embed) // load iframe\n    window.addEventListener('message', parseData) // add Api listener for initialDelivery\n\n    return function cleanup() {\n      window.removeEventListener('message', parseData)\n      document.body.removeChild(embed)\n    }\n  })\n}\n\nexport function parseYoutubeUrl(url) {\n  var p = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/\n  let urlMatch = url.match(p)\n\n  if (urlMatch) return urlMatch[1]\n\n  return false\n}\n","/Users/kaybanks/Repository/videoplayer/src/utility/seedData.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/playlistCreator.js",[],"/Users/kaybanks/Repository/videoplayer/src/index.js",[],{"ruleId":"78","severity":2,"message":"79","line":42,"column":3,"nodeType":"80","messageId":"81","endLine":42,"endColumn":17},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"82","replacedBy":"88"},{"ruleId":"84","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":80,"column":10,"nodeType":"80","messageId":"92","endLine":80,"endColumn":25},{"ruleId":"90","severity":1,"message":"93","line":402,"column":8,"nodeType":"80","messageId":"92","endLine":402,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":42,"column":45,"nodeType":"96","messageId":"97","endLine":42,"endColumn":47},"no-undef","'notificationID' is not defined.","Identifier","undef","no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],["98"],["99"],"no-unused-vars","'setUpFileUpload' is defined but never used.","unusedVar","'totalSplit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/kaybanks/Repository/videoplayer/src/App.js":"1","/Users/kaybanks/Repository/videoplayer/src/components/buttons.js":"2","/Users/kaybanks/Repository/videoplayer/src/components/keyboard.events.js":"3","/Users/kaybanks/Repository/videoplayer/src/components/SortingOption.js":"4","/Users/kaybanks/Repository/videoplayer/src/components/toolbar.js":"5","/Users/kaybanks/Repository/videoplayer/src/components/playlistItem.js":"6","/Users/kaybanks/Repository/videoplayer/src/player/drag.js":"7","/Users/kaybanks/Repository/videoplayer/src/components/stats.service.js":"8","/Users/kaybanks/Repository/videoplayer/src/components/playlist.js":"9","/Users/kaybanks/Repository/videoplayer/src/utility/index.js":"10","/Users/kaybanks/Repository/videoplayer/src/utility/startup.js":"11","/Users/kaybanks/Repository/videoplayer/src/utility/youtube.js":"12","/Users/kaybanks/Repository/videoplayer/src/utility/seedData.js":"13","/Users/kaybanks/Repository/videoplayer/src/utility/playlistCreator.js":"14","/Users/kaybanks/Repository/videoplayer/src/index.js":"15"},{"size":17481,"mtime":1634157844179,"results":"16","hashOfConfig":"17"},{"size":4453,"mtime":1634161812533,"results":"18","hashOfConfig":"17"},{"size":2968,"mtime":1634145727392,"results":"19","hashOfConfig":"17"},{"size":1428,"mtime":1633872127469,"results":"20","hashOfConfig":"17"},{"size":2136,"mtime":1634003830500,"results":"21","hashOfConfig":"17"},{"size":1602,"mtime":1634157118579,"results":"22","hashOfConfig":"17"},{"size":2281,"mtime":1633543023689,"results":"23","hashOfConfig":"17"},{"size":15446,"mtime":1634161803406,"results":"24","hashOfConfig":"17"},{"size":8002,"mtime":1634156616625,"results":"25","hashOfConfig":"17"},{"size":6776,"mtime":1634150919065,"results":"26","hashOfConfig":"17"},{"size":714,"mtime":1633488184587,"results":"27","hashOfConfig":"17"},{"size":1665,"mtime":1633581258720,"results":"28","hashOfConfig":"17"},{"size":18459,"mtime":1633875163723,"results":"29","hashOfConfig":"17"},{"size":1506,"mtime":1633905594354,"results":"30","hashOfConfig":"17"},{"size":667,"mtime":1634147107416,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"149wjm3",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kaybanks/Repository/videoplayer/src/App.js",[],"/Users/kaybanks/Repository/videoplayer/src/components/buttons.js",[],"/Users/kaybanks/Repository/videoplayer/src/components/keyboard.events.js",[],"/Users/kaybanks/Repository/videoplayer/src/components/SortingOption.js",[],["65","66"],"/Users/kaybanks/Repository/videoplayer/src/components/toolbar.js",[],"/Users/kaybanks/Repository/videoplayer/src/components/playlistItem.js",[],"/Users/kaybanks/Repository/videoplayer/src/player/drag.js",["67"],"const drag = {\n  cs: [],\n  onDrag(c) {\n    drag.cs.push(c)\n  }\n}\n\nexport const drop = async (es, loadFiles) => {\n  //   absolutePath: new URL(`file:///${entry.path}`).href;\n  let files = []\n  const entries = es\n    .map(f =>\n      f.webkitGetAsEntry\n        ? f.webkitGetAsEntry()\n        : {\n            isFile: true,\n            file(c) {\n              c(f)\n            }\n          }\n    )\n    .filter(a => a)\n\n  const checkEntry = async entry => {\n    const file = await new Promise(resolve => entry.file(resolve))\n\n    if (file.type) {\n      if (file.type.startsWith('audio/') || file.type.startsWith('video/')) {\n        files.push(file)\n      }\n    } else {\n      if (file.name.startsWith('.') === false) {\n        //   files.push(file);\n      }\n    }\n  }\n\n  const readEntries = entry =>\n    new Promise(resolve => {\n      const directoryReader = entry.createReader()\n\n      directoryReader.readEntries(async entries => {\n        //   console.error('entries: ', entries);\n        for (const entry of entries) {\n          if (entry.isFile) {\n            await checkEntry(entry)\n          } else {\n            await readEntries(entry)\n          }\n        }\n\n        resolve()\n      })\n    })\n\n  for (const entry of entries) {\n    if (entry.isFile) {\n      await checkEntry(entry)\n    } else {\n      await readEntries(entry)\n    }\n  }\n\n  //   files = files.sort((a, b) => parseInt(a.name) - parseInt(b.name));\n\n  //   files = files.sort((a, b) =>\n  //     b.name.localeCompare(a.name)\n  //   );\n  if (files.length) {\n    //  for (const c of drag.cs) {\n    //    c(files)\n    //  }\n\n    loadFiles(files)\n  }\n}\n\nexport default drag\n\nfunction setUpFileUpload() {\n  document.addEventListener('drop', e => {\n    e.preventDefault()\n    drop([...e.dataTransfer.items])\n  })\n\n  document.addEventListener('dragover', e => e.preventDefault())\n\n  const container = document.getElementById('video-container')\n\n  container.addEventListener('dblclick', e => {\n    if (e.target === container) {\n      const input = document.createElement('input')\n\n      input.type = 'file'\n      input.multiple = true\n      input.accept = 'video/*, audio/*'\n\n      input.onchange = () => {\n        if (input.files.length) {\n          drop([...input.files])\n        }\n      }\n\n      input.click()\n    }\n  })\n}\n","/Users/kaybanks/Repository/videoplayer/src/components/stats.service.js",["68"],"/Users/kaybanks/Repository/videoplayer/src/components/playlist.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/index.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/startup.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/youtube.js",["69"],"import { Observable, firstValueFrom } from 'rxjs'\n\nexport default async function getVideoDataFromUrl(url) {\n  const videoId = parseYoutubeUrl(url)\n\n  if (!videoId) return false\n\n  let videoData = await firstValueFrom(getVideoData$(videoId)) // await video data\n\n  console.log(\n    '🚀 ~ file: youtube.js ~ line 12 ~ getVideoDataFromUrl ~ videoData',\n    videoData\n  )\n\n  return videoData\n}\n\nfunction getVideoData$(ytId) {\n  return new Observable(observer => {\n    let embed = document.createElement('iframe')\n\n    embed.setAttribute(\n      'src',\n      `https://www.youtube.com/embed/${ytId}?enablejsapi=1&widgetid=99`\n    )\n    embed.cssText = 'position: absolute; display: none'\n\n    embed.onload = function () {\n      var message = JSON.stringify({\n        event: 'listening',\n        id: 99,\n        channel: 'widget'\n      })\n\n      embed.contentWindow.postMessage(message, 'https://www.youtube.com')\n    }\n\n    function parseData(e) {\n      const { event, id, info } = JSON.parse(e.data)\n\n      // console.log(JSON.parse(e.data))\n      if (event === 'initialDelivery' && id == 99) observer.next(info.videoData)\n    }\n\n    document.body.appendChild(embed) // load iframe\n    window.addEventListener('message', parseData) // add Api listener for initialDelivery\n\n    return function cleanup() {\n      window.removeEventListener('message', parseData)\n      document.body.removeChild(embed)\n    }\n  })\n}\n\nexport function parseYoutubeUrl(url) {\n  var p = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/\n  let urlMatch = url.match(p)\n\n  if (urlMatch) return urlMatch[1]\n\n  return false\n}\n","/Users/kaybanks/Repository/videoplayer/src/utility/seedData.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/playlistCreator.js",[],"/Users/kaybanks/Repository/videoplayer/src/index.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":80,"column":10,"nodeType":"76","messageId":"77","endLine":80,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":402,"column":8,"nodeType":"76","messageId":"77","endLine":402,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":42,"column":45,"nodeType":"81","messageId":"82","endLine":42,"endColumn":47},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'setUpFileUpload' is defined but never used.","Identifier","unusedVar","'totalSplit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
>>>>>>> acef3d19bc1bdc0d4d9b6970d6fcc960da201f9f

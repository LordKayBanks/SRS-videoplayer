[{"/Users/kaybanks/Repository/videoplayer/src/App.js":"1","/Users/kaybanks/Repository/videoplayer/src/components/playlist.js":"2","/Users/kaybanks/Repository/videoplayer/src/components/SortingOption.js":"3","/Users/kaybanks/Repository/videoplayer/src/components/buttons.js":"4","/Users/kaybanks/Repository/videoplayer/src/index.js":"5","/Users/kaybanks/Repository/videoplayer/src/components/toolbar.js":"6","/Users/kaybanks/Repository/videoplayer/src/utility/youtube.js":"7","/Users/kaybanks/Repository/videoplayer/src/components/playlistItem.js":"8","/Users/kaybanks/Repository/videoplayer/src/utility/index.js":"9","/Users/kaybanks/Repository/videoplayer/src/player/drag.js":"10","/Users/kaybanks/Repository/videoplayer/src/utility/startup.js":"11","/Users/kaybanks/Repository/videoplayer/src/utility/playlistCreator.js":"12","/Users/kaybanks/Repository/videoplayer/src/utility/seedData.js":"13"},{"size":40184,"mtime":1633923897021,"results":"14","hashOfConfig":"15"},{"size":8771,"mtime":1633911599580,"results":"16","hashOfConfig":"15"},{"size":1428,"mtime":1633872127469,"results":"17","hashOfConfig":"15"},{"size":6400,"mtime":1633893742893,"results":"18","hashOfConfig":"15"},{"size":663,"mtime":1633919072830,"results":"19","hashOfConfig":"15"},{"size":2885,"mtime":1633901063944,"results":"20","hashOfConfig":"15"},{"size":1665,"mtime":1633581258720,"results":"21","hashOfConfig":"15"},{"size":2159,"mtime":1633912023935,"results":"22","hashOfConfig":"15"},{"size":8218,"mtime":1633913470348,"results":"23","hashOfConfig":"15"},{"size":2281,"mtime":1633543023689,"results":"24","hashOfConfig":"15"},{"size":714,"mtime":1633488184587,"results":"25","hashOfConfig":"15"},{"size":1506,"mtime":1633905594354,"results":"26","hashOfConfig":"15"},{"size":18459,"mtime":1633875163723,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"149wjm3",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/kaybanks/Repository/videoplayer/src/App.js",["60","61"],"/Users/kaybanks/Repository/videoplayer/src/components/playlist.js",[],["62","63"],"/Users/kaybanks/Repository/videoplayer/src/components/SortingOption.js",[],["64","65"],"/Users/kaybanks/Repository/videoplayer/src/components/buttons.js",[],"/Users/kaybanks/Repository/videoplayer/src/index.js",[],"/Users/kaybanks/Repository/videoplayer/src/components/toolbar.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/youtube.js",["66"],"import { Observable, firstValueFrom } from 'rxjs'\n\nexport default async function getVideoDataFromUrl(url) {\n  const videoId = parseYoutubeUrl(url)\n\n  if (!videoId) return false\n\n  let videoData = await firstValueFrom(getVideoData$(videoId)) // await video data\n\n  console.log(\n    'ðŸš€ ~ file: youtube.js ~ line 12 ~ getVideoDataFromUrl ~ videoData',\n    videoData\n  )\n\n  return videoData\n}\n\nfunction getVideoData$(ytId) {\n  return new Observable(observer => {\n    let embed = document.createElement('iframe')\n\n    embed.setAttribute(\n      'src',\n      `https://www.youtube.com/embed/${ytId}?enablejsapi=1&widgetid=99`\n    )\n    embed.cssText = 'position: absolute; display: none'\n\n    embed.onload = function () {\n      var message = JSON.stringify({\n        event: 'listening',\n        id: 99,\n        channel: 'widget'\n      })\n\n      embed.contentWindow.postMessage(message, 'https://www.youtube.com')\n    }\n\n    function parseData(e) {\n      const { event, id, info } = JSON.parse(e.data)\n\n      // console.log(JSON.parse(e.data))\n      if (event === 'initialDelivery' && id == 99) observer.next(info.videoData)\n    }\n\n    document.body.appendChild(embed) // load iframe\n    window.addEventListener('message', parseData) // add Api listener for initialDelivery\n\n    return function cleanup() {\n      window.removeEventListener('message', parseData)\n      document.body.removeChild(embed)\n    }\n  })\n}\n\nexport function parseYoutubeUrl(url) {\n  var p = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/\n  let urlMatch = url.match(p)\n\n  if (urlMatch) return urlMatch[1]\n\n  return false\n}\n","/Users/kaybanks/Repository/videoplayer/src/components/playlistItem.js",[],["67","68"],"/Users/kaybanks/Repository/videoplayer/src/utility/index.js",[],"/Users/kaybanks/Repository/videoplayer/src/player/drag.js",["69"],"const drag = {\n  cs: [],\n  onDrag(c) {\n    drag.cs.push(c)\n  }\n}\n\nexport const drop = async (es, loadFiles) => {\n  //   absolutePath: new URL(`file:///${entry.path}`).href;\n  let files = []\n  const entries = es\n    .map(f =>\n      f.webkitGetAsEntry\n        ? f.webkitGetAsEntry()\n        : {\n            isFile: true,\n            file(c) {\n              c(f)\n            }\n          }\n    )\n    .filter(a => a)\n\n  const checkEntry = async entry => {\n    const file = await new Promise(resolve => entry.file(resolve))\n\n    if (file.type) {\n      if (file.type.startsWith('audio/') || file.type.startsWith('video/')) {\n        files.push(file)\n      }\n    } else {\n      if (file.name.startsWith('.') === false) {\n        //   files.push(file);\n      }\n    }\n  }\n\n  const readEntries = entry =>\n    new Promise(resolve => {\n      const directoryReader = entry.createReader()\n\n      directoryReader.readEntries(async entries => {\n        //   console.error('entries: ', entries);\n        for (const entry of entries) {\n          if (entry.isFile) {\n            await checkEntry(entry)\n          } else {\n            await readEntries(entry)\n          }\n        }\n\n        resolve()\n      })\n    })\n\n  for (const entry of entries) {\n    if (entry.isFile) {\n      await checkEntry(entry)\n    } else {\n      await readEntries(entry)\n    }\n  }\n\n  //   files = files.sort((a, b) => parseInt(a.name) - parseInt(b.name));\n\n  //   files = files.sort((a, b) =>\n  //     b.name.localeCompare(a.name)\n  //   );\n  if (files.length) {\n    //  for (const c of drag.cs) {\n    //    c(files)\n    //  }\n\n    loadFiles(files)\n  }\n}\n\nexport default drag\n\nfunction setUpFileUpload() {\n  document.addEventListener('drop', e => {\n    e.preventDefault()\n    drop([...e.dataTransfer.items])\n  })\n\n  document.addEventListener('dragover', e => e.preventDefault())\n\n  const container = document.getElementById('video-container')\n\n  container.addEventListener('dblclick', e => {\n    if (e.target === container) {\n      const input = document.createElement('input')\n\n      input.type = 'file'\n      input.multiple = true\n      input.accept = 'video/*, audio/*'\n\n      input.onchange = () => {\n        if (input.files.length) {\n          drop([...input.files])\n        }\n      }\n\n      input.click()\n    }\n  })\n}\n","/Users/kaybanks/Repository/videoplayer/src/utility/startup.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/playlistCreator.js",[],"/Users/kaybanks/Repository/videoplayer/src/utility/seedData.js",[],["70","71"],{"ruleId":"72","severity":1,"message":"73","line":1145,"column":13,"nodeType":"74","messageId":"75","endLine":1145,"endColumn":19},{"ruleId":"72","severity":1,"message":"76","line":1146,"column":13,"nodeType":"74","messageId":"75","endLine":1146,"endColumn":21},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":42,"column":45,"nodeType":"85","messageId":"86","endLine":42,"endColumn":47},{"ruleId":"77","replacedBy":"87"},{"ruleId":"79","replacedBy":"88"},{"ruleId":"72","severity":1,"message":"89","line":80,"column":10,"nodeType":"74","messageId":"75","endLine":80,"endColumn":25},{"ruleId":"77","replacedBy":"90"},{"ruleId":"79","replacedBy":"91"},"no-unused-vars","'loaded' is assigned a value but never used.","Identifier","unusedVar","'duration' is assigned a value but never used.","no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["92"],["93"],"'setUpFileUpload' is defined but never used.",["92"],["93"],"no-global-assign","no-unsafe-negation"]